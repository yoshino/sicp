; defult
(define (multiple-dwelling)
  (let ((baker (amb 1 2 3 4 5))
        (cooper (amb 1 2 3 4 5))
        (fletcher (amb 1 2 3 4 5))
        (miller (amb 1 2 3 4 5))
        (smith (amb 1 2 3 4 5)))
    (require
      (distinct? (list baker cooper fletcher miller smith)))
    (require (not (= baker 5)))
    (require (not (= cooper 1)))
    (require (not (= fletcher 5)))
    (require (not (= fletcher 1)))
    (require (> miller cooper))
    (require (not (= (abs (- smith fletcher )) 1)))
    (require (not (= (abs (- fletcher cooper )) 1)))
    (list (list 'baker baker)
          (list 'cooper cooper)
          (list 'fletcher fletcher)
          (list 'miller miller)
          (list 'smith smith))))

; 各階に１人というルールをつける場合の通り数は
; 5 * 4 * 3* 2 * 1 = 120

; 各階に複数人を許容する場合は
; 5 ** 5 = 3125

(define (multiple-dwelling)
  (let ((baker (amb 1 2 3 4 5)))
    (require (not (= baker 5)))
    (let (cooper (amb 1 2 3 4 5))
      (require (not (= cooper 1)))
      (require (distinct? baker cooper))
      (let (fletcher (amb 1 2 3 4 5))
        (require (not (= fletcher 5)))
        (require (not (= fletcher 1)))
        (require (not (= (abs (- fletcher cooper )) 1)))
        (require (distinct? baker cooper fletcher))
        (let (smith (amb 1 2 3 4 5))
          (require (not (= (abs (- smith fletcher )) 1)))
          (require (distinct? baker cooper fletcher smith))
          (let (miller (amb 1 2 3 4 5))
            (require (> miller cooper))
            (require (distinct? baker cooper fletcher smith miller)))))))
  (list (list 'baker baker)
        (list 'cooper cooper)
        (list 'fletcher fletcher)
        (list 'miller miller)
        (list 'smith smith)))
